apply plugin: "java"
apply plugin: 'application'
apply plugin: 'checkstyle'
    
mainClassName = 'main.java.com.sdx2.SapphireAudioPlayer.SapphireMain'

jar {
    baseName = 'SapphireAudioPlayer'
    version =  '0.1.0'
}

repositories {
   flatDir {
       dirs 'lib'
   }
}

repositories {
  mavenCentral()
}

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '12.0'
   compile name: 'jaudiotagger-2.2.5'
   compile name: 'java-json-schema'
   compile name: 'jl1.0.1'
   testCompile name: 'assertj-core-3.2.0'
   testCompile name: 'mockito-all-1.10.19'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}

checkstyle {
   configFile = new File(rootDir, "checkstyle.xml")
}

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
	def os = System.getProperty("os.name").toLowerCase()
	if (!os.contains("windows")) {
		exec {
			executable "/bin/sh"
			args "-c", "echo -n `git describe --tags`"
			standardOutput = stdout
		}
	} else {
		exec {
			executable "cmd"
			args "/c", "git describe --tags"
			standardOutput = stdout
		}
    }
    return stdout.toString().trim()
}

task writeVersionClass {
    File f = new File('src/main/java/com/sdx2/SapphireAudioPlayer/Version.java');
    if (f.exists()) { f.delete(); }

    f = new File('src/main/java/com/sdx2/SapphireAudioPlayer/Version.java');
    FileOutputStream os = new FileOutputStream(f);
    os.write(("package main.java.com.sdx2.SapphireAudioPlayer; \n\n public class Version{\n    public static final String v = \""+(getVersionName())+"\";\n}").getBytes());
    os.flush();
    os.close();
}

build.doFirst {
    writeVersionClass
}



